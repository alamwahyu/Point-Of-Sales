<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>